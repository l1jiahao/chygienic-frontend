{"remainingRequest":"/home/nogra/WebstormProjects/chygienic-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nogra/WebstormProjects/chygienic-frontend/src/views/account/settings/Custom.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nogra/WebstormProjects/chygienic-frontend/src/views/account/settings/Custom.vue","mtime":1639697479614},{"path":"/home/nogra/WebstormProjects/chygienic-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1639555563345},{"path":"/home/nogra/WebstormProjects/chygienic-frontend/node_modules/babel-loader/lib/index.js","mtime":1639555563394},{"path":"/home/nogra/WebstormProjects/chygienic-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1639555563345},{"path":"/home/nogra/WebstormProjects/chygienic-frontend/node_modules/vue-loader/lib/index.js","mtime":1639555573442}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNvbG9yTGlzdCB9IGZyb20gJ0AvY29tcG9uZW50cy9TZXR0aW5nRHJhd2VyL3NldHRpbmdDb25maWcnCmltcG9ydCB7IGJhc2VNaXhpbiB9IGZyb20gJ0Avc3RvcmUvYXBwLW1peGluJwppbXBvcnQgeyBOQVZfVEhFTUUsIFRPR0dMRV9OQVZfVEhFTUUgfSBmcm9tICdAL3N0b3JlL211dGF0aW9uLXR5cGVzJwoKY29uc3QgdGhlbWVNYXAgPSB7CiAgJ2RhcmsnOiAn5pqX6ImyJywKICAnbGlnaHQnOiAn55m96ImyJwp9CgpleHBvcnQgZGVmYXVsdCB7CiAgbWl4aW5zOiBbYmFzZU1peGluXSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICB9CiAgfSwKICBmaWx0ZXJzOiB7CiAgICB0aGVtZUZpbHRlciAodGhlbWUpIHsKICAgICAgcmV0dXJuIHRoZW1lTWFwW3RoZW1lXQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY29sb3JGaWx0ZXIgKGNvbG9yKSB7CiAgICAgIGNvbnN0IGMgPSBjb2xvckxpc3QuZmluZChvID0+IG8uY29sb3IgPT09IGNvbG9yKQogICAgICByZXR1cm4gYyAmJiBjLmtleQogICAgfSwKCiAgICBvbkNoYW5nZSAoY2hlY2tlZCkgewogICAgICBpZiAoY2hlY2tlZCkgewogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdChUT0dHTEVfTkFWX1RIRU1FLCBOQVZfVEhFTUUuREFSSykKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoVE9HR0xFX05BVl9USEVNRSwgTkFWX1RIRU1FLkxJR0hUKQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Custom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Custom.vue","sourceRoot":"src/views/account/settings","sourcesContent":["<template>\n  <a-list itemLayout=\"horizontal\">\n    <a-list-item>\n      <a-list-item-meta>\n        <template v-slot:title>\n          <a>风格配色</a>\n        </template>\n        <template v-slot:description>\n          <span>\n            整体风格配色设置\n          </span>\n        </template>\n      </a-list-item-meta>\n      <template v-slot:actions>\n        <a-switch checkedChildren=\"暗色\" unCheckedChildren=\"白色\" :defaultChecked=\"navTheme === 'dark' && true || false\" @change=\"onChange\" />\n      </template>\n    </a-list-item>\n    <a-list-item>\n      <a-list-item-meta>\n        <template v-slot:title>\n          <a>主题色</a>\n        </template>\n        <template v-slot:description>\n          <span>\n            页面风格配色： <a>{{ colorFilter(primaryColor) }}</a>\n          </span>\n        </template>\n      </a-list-item-meta>\n    </a-list-item>\n  </a-list>\n</template>\n<script>\nimport { colorList } from '@/components/SettingDrawer/settingConfig'\nimport { baseMixin } from '@/store/app-mixin'\nimport { NAV_THEME, TOGGLE_NAV_THEME } from '@/store/mutation-types'\n\nconst themeMap = {\n  'dark': '暗色',\n  'light': '白色'\n}\n\nexport default {\n  mixins: [baseMixin],\n  data () {\n    return {\n    }\n  },\n  filters: {\n    themeFilter (theme) {\n      return themeMap[theme]\n    }\n  },\n  methods: {\n    colorFilter (color) {\n      const c = colorList.find(o => o.color === color)\n      return c && c.key\n    },\n\n    onChange (checked) {\n      if (checked) {\n        this.$store.commit(TOGGLE_NAV_THEME, NAV_THEME.DARK)\n      } else {\n        this.$store.commit(TOGGLE_NAV_THEME, NAV_THEME.LIGHT)\n      }\n    }\n  }\n}\n</script>\n"]}]}