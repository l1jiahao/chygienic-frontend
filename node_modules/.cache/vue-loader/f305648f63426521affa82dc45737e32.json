{"remainingRequest":"/home/nogra/WebstormProjects/chygienic-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/nogra/WebstormProjects/chygienic-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/nogra/WebstormProjects/chygienic-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nogra/WebstormProjects/chygienic-frontend/src/views/list/BasicList.vue?vue&type=template&id=2d98e8b5&scoped=true&","dependencies":[{"path":"/home/nogra/WebstormProjects/chygienic-frontend/src/views/list/BasicList.vue","mtime":1639697479614},{"path":"/home/nogra/WebstormProjects/chygienic-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1639555563345},{"path":"/home/nogra/WebstormProjects/chygienic-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1639555573442},{"path":"/home/nogra/WebstormProjects/chygienic-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1639555563345},{"path":"/home/nogra/WebstormProjects/chygienic-frontend/node_modules/vue-loader/lib/index.js","mtime":1639555573442}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}